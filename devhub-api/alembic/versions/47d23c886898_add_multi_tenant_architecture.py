"""add_multi_tenant_architecture

Revision ID: 47d23c886898
Revises: fef60ef31522
Create Date: 2025-07-15 16:48:14.710657

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '47d23c886898'
down_revision: Union[str, None] = 'fef60ef31522'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tenants',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('system_id', sa.String(), nullable=True),
    sa.Column('business_name', sa.String(), nullable=True),
    sa.Column('business_email', sa.String(), nullable=True),
    sa.Column('business_phone', sa.String(), nullable=True),
    sa.Column('address_line1', sa.String(), nullable=True),
    sa.Column('address_line2', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('state', sa.String(), nullable=True),
    sa.Column('postal_code', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('subscription_plan', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('max_users', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tenants_business_name'), 'tenants', ['business_name'], unique=False)
    op.create_index(op.f('ix_tenants_id'), 'tenants', ['id'], unique=False)
    op.create_index(op.f('ix_tenants_system_id'), 'tenants', ['system_id'], unique=True)
    op.add_column('customers', sa.Column('tenant_id', sa.String(), nullable=True))
    op.create_foreign_key(None, 'customers', 'tenants', ['tenant_id'], ['system_id'])
    op.add_column('leads', sa.Column('tenant_id', sa.String(), nullable=True))
    op.create_foreign_key(None, 'leads', 'tenants', ['tenant_id'], ['system_id'])
    op.add_column('projects', sa.Column('tenant_id', sa.String(), nullable=True))
    op.create_foreign_key(None, 'projects', 'tenants', ['tenant_id'], ['system_id'])
    op.add_column('users', sa.Column('department', sa.String(), nullable=True))
    op.add_column('users', sa.Column('permissions', sa.Text(), nullable=True))
    op.drop_index(op.f('ix_users_tenant_id'), table_name='users')
    op.create_foreign_key(None, 'users', 'tenants', ['tenant_id'], ['system_id'])
    op.drop_column('users', 'tenant_name')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('tenant_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.create_index(op.f('ix_users_tenant_id'), 'users', ['tenant_id'], unique=False)
    op.drop_column('users', 'permissions')
    op.drop_column('users', 'department')
    op.drop_constraint(None, 'projects', type_='foreignkey')
    op.drop_column('projects', 'tenant_id')
    op.drop_constraint(None, 'leads', type_='foreignkey')
    op.drop_column('leads', 'tenant_id')
    op.drop_constraint(None, 'customers', type_='foreignkey')
    op.drop_column('customers', 'tenant_id')
    op.drop_index(op.f('ix_tenants_system_id'), table_name='tenants')
    op.drop_index(op.f('ix_tenants_id'), table_name='tenants')
    op.drop_index(op.f('ix_tenants_business_name'), table_name='tenants')
    op.drop_table('tenants')
    # ### end Alembic commands ###
